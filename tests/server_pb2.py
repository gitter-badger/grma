# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: server.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import descriptor_pb2 as google_dot_protobuf_dot_descriptor__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='server.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x0cserver.proto\x1a google/protobuf/descriptor.proto\"\x14\n\x02MO\x12\x0e\n\x06method\x18\x01 \x01(\t\"\x1b\n\x0cHelloRequest\x12\x0b\n\x03say\x18\x01 \x01(\t\"\x1e\n\rHelloResponse\x12\r\n\x05reply\x18\x01 \x01(\t2B\n\rSimpleService\x12\x31\n\x05Hello\x12\r.HelloRequest\x1a\x0e.HelloResponse\"\t\xb2\xb5\x18\x05\n\x03GET:1\n\x02mo\x12\x1e.google.protobuf.MethodOptions\x18\xd6\x86\x03 \x01(\x0b\x32\x03.MOb\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_descriptor__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)


MO_FIELD_NUMBER = 50006
mo = _descriptor.FieldDescriptor(
  name='mo', full_name='mo', index=0,
  number=50006, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)


_MO = _descriptor.Descriptor(
  name='MO',
  full_name='MO',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='method', full_name='MO.method', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=50,
  serialized_end=70,
)


_HELLOREQUEST = _descriptor.Descriptor(
  name='HelloRequest',
  full_name='HelloRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='say', full_name='HelloRequest.say', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=72,
  serialized_end=99,
)


_HELLORESPONSE = _descriptor.Descriptor(
  name='HelloResponse',
  full_name='HelloResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reply', full_name='HelloResponse.reply', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=101,
  serialized_end=131,
)

DESCRIPTOR.message_types_by_name['MO'] = _MO
DESCRIPTOR.message_types_by_name['HelloRequest'] = _HELLOREQUEST
DESCRIPTOR.message_types_by_name['HelloResponse'] = _HELLORESPONSE
DESCRIPTOR.extensions_by_name['mo'] = mo

MO = _reflection.GeneratedProtocolMessageType('MO', (_message.Message,), dict(
  DESCRIPTOR = _MO,
  __module__ = 'server_pb2'
  # @@protoc_insertion_point(class_scope:MO)
  ))
_sym_db.RegisterMessage(MO)

HelloRequest = _reflection.GeneratedProtocolMessageType('HelloRequest', (_message.Message,), dict(
  DESCRIPTOR = _HELLOREQUEST,
  __module__ = 'server_pb2'
  # @@protoc_insertion_point(class_scope:HelloRequest)
  ))
_sym_db.RegisterMessage(HelloRequest)

HelloResponse = _reflection.GeneratedProtocolMessageType('HelloResponse', (_message.Message,), dict(
  DESCRIPTOR = _HELLORESPONSE,
  __module__ = 'server_pb2'
  # @@protoc_insertion_point(class_scope:HelloResponse)
  ))
_sym_db.RegisterMessage(HelloResponse)

mo.message_type = _MO
google_dot_protobuf_dot_descriptor__pb2.MethodOptions.RegisterExtension(mo)

import abc
from grpc.beta import implementations as beta_implementations
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

class BetaSimpleServiceServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def Hello(self, request, context):
    raise NotImplementedError()

class BetaSimpleServiceStub(object):
  """The interface to which stubs will conform."""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def Hello(self, request, timeout):
    raise NotImplementedError()
  Hello.future = None

def beta_create_SimpleService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  import server_pb2
  import server_pb2
  request_deserializers = {
    ('SimpleService', 'Hello'): server_pb2.HelloRequest.FromString,
  }
  response_serializers = {
    ('SimpleService', 'Hello'): server_pb2.HelloResponse.SerializeToString,
  }
  method_implementations = {
    ('SimpleService', 'Hello'): face_utilities.unary_unary_inline(servicer.Hello),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)

def beta_create_SimpleService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  import server_pb2
  import server_pb2
  request_serializers = {
    ('SimpleService', 'Hello'): server_pb2.HelloRequest.SerializeToString,
  }
  response_deserializers = {
    ('SimpleService', 'Hello'): server_pb2.HelloResponse.FromString,
  }
  cardinalities = {
    'Hello': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'SimpleService', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
